@mixin button($class: 'button-primary') {
  outline: 0;
  padding: 0.5em;
  margin: 0.25em;
  min-width: 100px;
  cursor: pointer;

  color: map.get($theme, $class, font-color);
  background-color: map.get($theme, $class, color);
  border: 1px solid colorStep($class);
  border-radius: 3px;

  transition-property: background-color;
  transition-duration: 0.15s;
  transition-delay: 0;

  &:disabled {
    cursor: inherit;
    color: rgba(colorStep($class, $colorMap: 'font-color'), 0.5);
    background-color: colorStep($class);
    border-color: colorStep($class, $darken: true);

    &:hover, &:focus, &:active {
      color: rgba(colorStep($class, $colorMap: 'font-color'), 0.5);
      background-color: colorStep($class, $darken: true);
      border-color: colorStep($class, $darken: true);
    }
  }

  &:hover, &:focus {
    $bg: colorStep($class);

    color: chooseColor(
      $bg,
      map.get($theme, $class, font-color),
      map.get($theme, $class, font-color-alt)
    );

    background-color: $bg;
    border-color: colorStep($class, $step: 2);
  }

  &:active {
    $bg: colorStep($class, $step: 2);

    color: chooseColor(
      $bg,
      map.get($theme, $class, font-color),
      map.get($theme, $class, font-color-alt)
    );

    background-color: $bg;
    border-color: colorStep($class, $step: 3);
  }
}

@mixin input-reset {
  color: rgba(0,0,0,0.4);
  position: absolute;
  width: 25px;
  top: 0px;
  right: 0px;
  outline: none;
  border: none;
  background-color: transparent;
  cursor: pointer;
  height: 100%;
}

@mixin round-border {
  border: 1px solid colorStep(primary, $step: 8);
  border-radius: 0.25rem;
}

@mixin pagination-buttons {
  text-align: center;

  & button {
    outline: none;
    border: none;
    background: none;
    cursor: pointer;
    margin: 1em;
    text-decoration: underline;
    overflow: visible;

    &:hover {
      background-color: colorStep('button-secondary');
    }

    &:disabled, &:disabled:hover {
      cursor: auto;
      background: none;
    }
  }
}

@mixin mobile-table($size: 8em, $width: 800px, $names: []) {
  @media screen and (max-width: $width) {
    & thead, & tbody, & th, & td, & tr {
      display: block;
    }

    & thead th {
      display: none;
    }

    & tr + tr {
      border-top: 2px solid colorStep(secondary, $step: 4);
    }

    & tbody tr td {
      position: relative;
      padding-left: $size !important;
      border: none;
      text-align: left !important;
      word-break: break-all;

      & + td {
        border-top: 1px solid colorStep(secondary, $step: 2);
      }

      &::before {
        position: absolute;
        top: 0.5em;
        left: 0.25em;
        width: $size;
        white-space: nowrap;
        font-weight: bold;
      }

      @for $i from 1 through length($names) {
        $x: nth($names, $i);

        &:nth-of-type(#{$i})::before {
          content: '#{$x}';
        }
      }

      @content;
    }
  }
}
